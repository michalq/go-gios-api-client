// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// AcquisitionType acquisition type
// swagger:model AcquisitionType
type AcquisitionType string

const (

	// AcquisitionTypePM10 captures enum value "PM10"
	AcquisitionTypePM10 AcquisitionType = "PM10"

	// AcquisitionTypeNO2 captures enum value "NO2"
	AcquisitionTypeNO2 AcquisitionType = "NO2"

	// AcquisitionTypeSO2 captures enum value "SO2"
	AcquisitionTypeSO2 AcquisitionType = "SO2"

	// AcquisitionTypeC6H6 captures enum value "C6H6"
	AcquisitionTypeC6H6 AcquisitionType = "C6H6"

	// AcquisitionTypeO3 captures enum value "O3"
	AcquisitionTypeO3 AcquisitionType = "O3"

	// AcquisitionTypePM25 captures enum value "PM25"
	AcquisitionTypePM25 AcquisitionType = "PM25"

	// AcquisitionTypeCO captures enum value "CO"
	AcquisitionTypeCO AcquisitionType = "CO"
)

// for schema
var acquisitionTypeEnum []interface{}

func init() {
	var res []AcquisitionType
	if err := json.Unmarshal([]byte(`["PM10","NO2","SO2","C6H6","O3","PM25","CO"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		acquisitionTypeEnum = append(acquisitionTypeEnum, v)
	}
}

func (m AcquisitionType) validateAcquisitionTypeEnum(path, location string, value AcquisitionType) error {
	if err := validate.Enum(path, location, value, acquisitionTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this acquisition type
func (m AcquisitionType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAcquisitionTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
